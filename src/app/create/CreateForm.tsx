'use client'

import { useState } from "react";
import {Flashcard} from "@/types/flashcard";
import NewFlashcard from "@/app/create/NewFlashcard";
import {TextField} from "@mui/material";
import {createClient} from "@/utils/supabase/client"
import {useRouter} from "next/navigation";

export default function CreateForm() {
    const [cards, setCards] = useState<Flashcard[]>([{id: 0, front: "", back: ""}]);
    const [nextID, setNextID] = useState(1);
    const [index, setIndex] = useState(0)
    const [stackName, setStackName] = useState("")
    const supabase = createClient()
    const router = useRouter()


    const addCard = () => {
        setCards(prev => [
            ...prev,
            { id: nextID, front: "", back: "" }
        ]);
        setNextID(nextID => nextID + 1)
        setIndex(index => index + 1)
    };

    const updateCard = (id: number, changes: Partial<Flashcard>) => {
        setCards(prev =>
            prev.map(card =>
                card.id == id ? { ...card, ...changes } : card
            )
        );
    };

    const deleteCard = (id: number) => {
        setCards(prev => prev.filter(card => card.id !== id));
    };

    const saveStack = async () => {
        const {
            data: {user}
        } = await supabase.auth.getUser()

        //save the flashcard stack object first
        const {data, error} = await supabase
            .from('flashcard_sets')
            .insert([
                {
                    user_id: user!.id,
                    //stack_id automatically generated by supabase
                    stack_name: stackName
                }
            ])
            .select('stack_id')

        //save each flashcard in the stack
        for (const card of cards) {
            await supabase
                .from('flashcards')
                .insert([
                    {
                        stack_id: data![0].stack_id,
                        front: card.front,
                        back: card.back
                    }
                ])
        }

        //redirect user to home page
        router.push("/")

    }

    return (
        <div className="max-w-xl mx-auto">
            <NewFlashcard
                    key={cards[index].id}
                    card={cards[index]}
                    onUpdate={updateCard}
                    onDelete={deleteCard}
            />
            <p>{index}</p>
            {index !== 0 && <button onClick={() => setIndex(index => index - 1)}>Previous</button>}
            {index === cards.length - 1 ?
                <button onClick={addCard}>Add</button> :
                <button onClick={() => setIndex(index => index + 1)}>Next</button>}
            <TextField
                value={stackName}
                onChange={(e) => setStackName(e.target.value)}
                placeholder="Stack name"
            />
            <button onClick={saveStack}>Save flashcard Set</button>
        </div>
    );
}
